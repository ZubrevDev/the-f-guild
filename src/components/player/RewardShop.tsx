'use client'

import { useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import { toast } from 'sonner'

interface RewardShopProps {
  playerCoins: {
    gold: number
    silver: number
    bronze: number
  }
  activeEffects: Array<{
    id: string
    type: string
    effects: any
  }>
  onPurchase: (itemId: string, cost: { type: 'gold' | 'silver' | 'bronze', amount: number }) => void
}

interface ShopItem {
  id: string
  name: string
  description: string
  icon: string
  category: string
  cost: {
    type: 'gold' | 'silver' | 'bronze'
    amount: number
  }
  availability: 'always' | 'limited' | 'special'
  stock?: number
  cooldown?: number
}

const shopItems: ShopItem[] = [
  // –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
  {
    id: 'phone_30min',
    name: '30 –º–∏–Ω—É—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
    description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å –ª—é–±–∏–º—ã–º–∏ –∏–≥—Ä–∞–º–∏',
    icon: 'üì±',
    category: 'entertainment',
    cost: { type: 'silver', amount: 3 },
    availability: 'always'
  },
  {
    id: 'games_1hour',
    name: '1 —á–∞—Å –∏–≥—Ä',
    description: '–í—Ä–µ–º—è –¥–ª—è –ª—é–±–∏–º—ã—Ö –≤–∏–¥–µ–æ–∏–≥—Ä',
    icon: 'üéÆ',
    category: 'entertainment',
    cost: { type: 'gold', amount: 1 },
    availability: 'always'
  },
  {
    id: 'tv_movie',
    name: '–§–∏–ª—å–º –Ω–∞ –≤—ã–±–æ—Ä',
    description: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º –≤–µ—á–µ—Ä–æ–º',
    icon: 'üé¨',
    category: 'entertainment',
    cost: { type: 'silver', amount: 4 },
    availability: 'always'
  },
  {
    id: 'late_bedtime',
    name: '–ü–æ–∑–¥–Ω–∏–π –æ—Ç–±–æ–π',
    description: '–õ–µ—á—å —Å–ø–∞—Ç—å –Ω–∞ —á–∞—Å –ø–æ–∑–∂–µ',
    icon: 'üõèÔ∏è',
    category: 'entertainment',
    cost: { type: 'bronze', amount: 10 },
    availability: 'always'
  },

  // –ü–æ–∫—É–ø–∫–∏
  {
    id: 'pocket_money_1',
    name: '1 –µ–≤—Ä–æ',
    description: '–†–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä–º–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã',
    icon: 'üí∞',
    category: 'money',
    cost: { type: 'gold', amount: 1 },
    availability: 'always'
  },
  {
    id: 'pocket_money_5',
    name: '5 –µ–≤—Ä–æ',
    description: '–ë–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –Ω–∞ –ª–∏—á–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏',
    icon: 'üíµ',
    category: 'money',
    cost: { type: 'gold', amount: 4 },
    availability: 'limited',
    stock: 1
  },
  {
    id: 'toy_small',
    name: '–ú–∞–ª–µ–Ω—å–∫–∞—è –∏–≥—Ä—É—à–∫–∞',
    description: '–ò–≥—Ä—É—à–∫–∞ –¥–æ 10 –µ–≤—Ä–æ –Ω–∞ –≤—ã–±–æ—Ä',
    icon: 'üß∏',
    category: 'money',
    cost: { type: 'gold', amount: 8 },
    availability: 'limited',
    stock: 1
  },

  // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  {
    id: 'cinema_family',
    name: '–ü–æ—Ö–æ–¥ –≤ –∫–∏–Ω–æ',
    description: '–°–µ–º–µ–π–Ω—ã–π –ø–æ—Ö–æ–¥ –≤ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
    icon: 'üçø',
    category: 'activities',
    cost: { type: 'gold', amount: 3 },
    availability: 'limited',
    stock: 1
  },
  {
    id: 'museum_visit',
    name: '–ü–æ—Ö–æ–¥ –≤ –º—É–∑–µ–π',
    description: '–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è',
    icon: 'üèõÔ∏è',
    category: 'activities',
    cost: { type: 'gold', amount: 2 },
    availability: 'always'
  },
  {
    id: 'park_picnic',
    name: '–ü–∏–∫–Ω–∏–∫ –≤ –ø–∞—Ä–∫–µ',
    description: '–°–µ–º–µ–π–Ω—ã–π –æ—Ç–¥—ã—Ö –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ',
    icon: 'üß∫',
    category: 'activities',
    cost: { type: 'silver', amount: 8 },
    availability: 'always'
  },

  // –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ
  {
    id: 'art_supplies',
    name: '–ù–∞–±–æ—Ä –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞',
    description: '–ù–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è',
    icon: 'üé®',
    category: 'creative',
    cost: { type: 'silver', amount: 5 },
    availability: 'always'
  },
  {
    id: 'craft_kit',
    name: '–ù–∞–±–æ—Ä –¥–ª—è –ø–æ–¥–µ–ª–æ–∫',
    description: '–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è creative –ø—Ä–æ–µ–∫—Ç–æ–≤',
    icon: '‚úÇÔ∏è',
    category: 'creative',
    cost: { type: 'silver', amount: 6 },
    availability: 'always'
  },

  // –û—Å–æ–±—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
  {
    id: 'choose_dinner',
    name: '–í—ã–±–æ—Ä —É–∂–∏–Ω–∞',
    description: '–†–µ—à–∞–µ—à—å, —á—Ç–æ –≤—Å—è —Å–µ–º—å—è –±—É–¥–µ—Ç –µ—Å—Ç—å –Ω–∞ —É–∂–∏–Ω',
    icon: 'üçΩÔ∏è',
    category: 'special',
    cost: { type: 'bronze', amount: 15 },
    availability: 'always'
  },
  {
    id: 'skip_chore',
    name: '–ü—Ä–æ–ø—É—Å–∫ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏',
    description: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–¥–Ω—É –¥–æ–º–∞—à–Ω—é—é –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å',
    icon: 'üèÉ‚Äç‚ôÇÔ∏è',
    category: 'special',
    cost: { type: 'silver', amount: 7 },
    availability: 'limited',
    stock: 2
  },
  {
    id: 'weekend_adventure',
    name: '–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ',
    description: '–¶–µ–ª—ã–π –¥–µ–Ω—å –ø–æ—Å–≤—è—â–µ–Ω —Ç–≤–æ–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º',
    icon: 'üó∫Ô∏è',
    category: 'special',
    cost: { type: 'gold', amount: 10 },
    availability: 'special',
    stock: 1
  }
]

export default function RewardShop({ playerCoins, activeEffects, onPurchase }: RewardShopProps) {
  const [selectedCategory, setSelectedCategory] = useState('all')

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'entertainment': return 'üéÆ'
      case 'money': return 'üí∞'
      case 'activities': return 'üéØ'
      case 'creative': return 'üé®'
      case 'special': return '‚≠ê'
      default: return 'üõí'
    }
  }

  const getCategoryName = (category: string) => {
    switch (category) {
      case 'entertainment': return '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è'
      case 'money': return '–î–µ–Ω—å–≥–∏'
      case 'activities': return '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
      case 'creative': return '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
      case 'special': return '–û—Å–æ–±—ã–µ'
      default: return '–í—Å–µ'
    }
  }

  const getCoinIcon = (type: string) => {
    switch (type) {
      case 'gold': return 'ü•á'
      case 'silver': return 'ü•à'
      case 'bronze': return 'ü•â'
      default: return 'üí∞'
    }
  }

  const getCoinColor = (type: string) => {
    switch (type) {
      case 'gold': return 'text-yellow-300 bg-yellow-500/20 border-yellow-500/30'
      case 'silver': return 'text-gray-300 bg-gray-500/20 border-gray-500/30'
      case 'bronze': return 'text-orange-300 bg-orange-500/20 border-orange-500/30'
      default: return 'text-blue-300 bg-blue-500/20 border-blue-500/30'
    }
  }

  const checkShopBlocked = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ activeEffects —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º
    if (!activeEffects || !Array.isArray(activeEffects)) return false
    return activeEffects.some(effect => effect.effects?.shopBlocked)
  }

  const canAfford = (cost: { type: 'gold' | 'silver' | 'bronze', amount: number }) => {
    return playerCoins[cost.type] >= cost.amount
  }

  const filteredItems = shopItems.filter(item => {
    if (selectedCategory === 'all') return true
    return item.category === selectedCategory
  })

  const handlePurchase = (item: ShopItem) => {
    if (checkShopBlocked()) {
      toast.error('üö´ –ú–∞–≥–∞–∑–∏–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤–∞—à–∏–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏!')
      return
    }

    if (!canAfford(item.cost)) {
      toast.error('üí∏ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
      return
    }

    onPurchase(item.id, item.cost)
    toast.success(`üõí –ö—É–ø–ª–µ–Ω–æ: ${item.name}! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–æ–¥–∏—Ç–µ–ª—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã.`)
  }

  const ShopItemCard = ({ item }: { item: ShopItem }) => {
    const affordable = canAfford(item.cost)
    const shopBlocked = checkShopBlocked()

    return (
      <Card className={`bg-white/5 border-white/10 transition-all hover:bg-white/10 ${!affordable || shopBlocked ? 'opacity-60' : ''}`}>
        <CardContent className="p-4">
          <div className="text-center mb-4">
            <div className="text-5xl mb-2">{item.icon}</div>
            <h3 className="font-bold text-white mb-2">{item.name}</h3>
            <p className="text-sm text-slate-300 mb-3">{item.description}</p>
          </div>

          <div className="flex justify-center mb-4">
            <Badge className={`${getCoinColor(item.cost.type)} border`}>
              {getCoinIcon(item.cost.type)} {item.cost.amount} {item.cost.type === 'gold' ? '–∑–æ–ª–æ—Ç–∞' : item.cost.type === 'silver' ? '—Å–µ—Ä–µ–±—Ä–∞' : '–±—Ä–æ–Ω–∑—ã'}
            </Badge>
          </div>

          {item.availability === 'limited' && item.stock !== undefined && (
            <div className="text-center mb-3">
              <Badge variant="outline" className="text-xs">
                üì¶ –û—Å—Ç–∞–ª–æ—Å—å: {item.stock}
              </Badge>
            </div>
          )}

          {item.availability === 'special' && (
            <div className="text-center mb-3">
              <Badge className="bg-purple-500/20 text-purple-300 border-purple-500/30 text-xs">
                ‚≠ê –û—Å–æ–±–∞—è –Ω–∞–≥—Ä–∞–¥–∞
              </Badge>
            </div>
          )}

          <Button
            className="w-full"
            onClick={() => handlePurchase(item)}
            disabled={!affordable || shopBlocked || (item.stock !== undefined && item.stock <= 0)}
            variant={affordable && !shopBlocked ? "default" : "outline"}
          >
            {shopBlocked ? 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ' : 
             !affordable ? 'üí∏ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤' :
             item.stock !== undefined && item.stock <= 0 ? 'üì≠ –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏' :
             'üõí –ö—É–ø–∏—Ç—å'}
          </Button>
        </CardContent>
      </Card>
    )
  }

  return (
    <div className="space-y-6">
      {/* Player Currency Display */}
      <Card className="bg-white/10 backdrop-blur border-white/20">
        <CardHeader>
          <CardTitle className="text-white text-center">üí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex justify-center gap-6">
            <div className="text-center bg-yellow-500/20 px-6 py-4 rounded-lg border border-yellow-500/30">
              <div className="text-4xl mb-2">ü•á</div>
              <div className="font-bold text-yellow-300 text-2xl">{playerCoins.gold}</div>
              <div className="text-sm text-slate-400">–ó–æ–ª–æ—Ç–æ</div>
            </div>
            <div className="text-center bg-gray-500/20 px-6 py-4 rounded-lg border border-gray-500/30">
              <div className="text-4xl mb-2">ü•à</div>
              <div className="font-bold text-gray-300 text-2xl">{playerCoins.silver}</div>
              <div className="text-sm text-slate-400">–°–µ—Ä–µ–±—Ä–æ</div>
            </div>
            <div className="text-center bg-orange-500/20 px-6 py-4 rounded-lg border border-orange-500/30">
              <div className="text-4xl mb-2">ü•â</div>
              <div className="font-bold text-orange-300 text-2xl">{playerCoins.bronze}</div>
              <div className="text-sm text-slate-400">–ë—Ä–æ–Ω–∑–∞</div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Shop Blocked Warning */}
      {checkShopBlocked() && (
        <Card className="bg-red-500/20 border-red-500/30">
          <CardContent className="p-4 text-center">
            <div className="text-4xl mb-2">üö´</div>
            <h3 className="text-lg font-bold text-red-300 mb-2">–ú–∞–≥–∞–∑–∏–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</h3>
            <p className="text-red-200 text-sm">
              –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –±–ª–æ–∫–∏—Ä—É—é—Ç –¥–æ—Å—Ç—É–ø –∫ –º–∞–≥–∞–∑–∏–Ω—É. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!
            </p>
          </CardContent>
        </Card>
      )}

      {/* Category Tabs */}
      <Tabs value={selectedCategory} onValueChange={setSelectedCategory}>
        <TabsList className="grid w-full grid-cols-6 bg-white/10">
          <TabsTrigger value="all">üõí –í—Å–µ</TabsTrigger>
          <TabsTrigger value="entertainment">üéÆ</TabsTrigger>
          <TabsTrigger value="money">üí∞</TabsTrigger>
          <TabsTrigger value="activities">üéØ</TabsTrigger>
          <TabsTrigger value="creative">üé®</TabsTrigger>
          <TabsTrigger value="special">‚≠ê</TabsTrigger>
        </TabsList>

        <TabsContent value={selectedCategory} className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
            {filteredItems.map((item) => (
              <ShopItemCard key={item.id} item={item} />
            ))}
          </div>

          {filteredItems.length === 0 && (
            <Card className="bg-white/10 backdrop-blur border-white/20">
              <CardContent className="text-center py-12">
                <div className="text-6xl mb-4">üõí</div>
                <h3 className="text-xl font-bold text-white mb-2">–ü—É—Å—Ç–æ</h3>
                <p className="text-slate-400 mb-4">–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.</p>
                <Button 
                  variant="outline" 
                  onClick={() => setSelectedCategory('all')}
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
                </Button>
              </CardContent>
            </Card>
          )}
        </TabsContent>
      </Tabs>

      {/* Shopping Tips */}
      <Card className="bg-white/10 backdrop-blur border-white/20">
        <CardHeader>
          <CardTitle className="text-white">üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–∫—É–ø–∫–∞–º</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <h4 className="font-bold text-green-400">ü•â –ë—Ä–æ–Ω–∑–∞</h4>
              <p className="text-sm text-slate-300">
                –õ–µ–≥–∫–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–π.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-bold text-gray-400">ü•à –°–µ—Ä–µ–±—Ä–æ</h4>
              <p className="text-sm text-slate-300">
                –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–æ–∂–Ω–µ–µ. –•–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ—Å–æ–±—ã—Ö —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ –ø–æ–∫—É–ø–æ–∫.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-bold text-yellow-400">ü•á –ó–æ–ª–æ—Ç–æ</h4>
              <p className="text-sm text-slate-300">
                –°–∞–º–∞—è —Ü–µ–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞! –¢—Ä–∞—Ç—å—Ç–µ –º—É–¥—Ä–æ –Ω–∞ –∫—Ä—É–ø–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-bold text-purple-400">‚≠ê –û—Å–æ–±—ã–µ –Ω–∞–≥—Ä–∞–¥—ã</h4>
              <p className="text-sm text-slate-300">
                –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
