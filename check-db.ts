import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany({
      include: {
        guild: {
          select: {
            name: true,
            code: true
          }
        }
      }
    })
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`)
    users.forEach(user => {
      console.log(`  - ${user.name} (${user.role}) –≤ –≥–∏–ª—å–¥–∏–∏ "${user.guild?.name || '–ù–µ—Ç –≥–∏–ª—å–¥–∏–∏'}"`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    const characters = await prisma.character.findMany({
      include: {
        user: { select: { name: true } },
        guild: { select: { name: true } },
        effects: true
      }
    })
    console.log(`\nüèÉ‚Äç‚ôÄÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂–µ–π: ${characters.length}`)
    characters.forEach(char => {
      console.log(`  - ${char.name} (${char.class}) - –£—Ä–æ–≤–µ–Ω—å ${char.level}, ${char.effects.length} —ç—Ñ—Ñ–µ–∫—Ç–æ–≤`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–≤–µ—Å—Ç—ã
    const quests = await prisma.quest.findMany({
      include: {
        character: { select: { name: true } }
      }
    })
    console.log(`\nüéØ –ö–≤–µ—Å—Ç–æ–≤: ${quests.length}`)
    quests.forEach(quest => {
      console.log(`  - "${quest.title}" [${quest.status}] ${quest.character ? `‚Üí ${quest.character.name}` : '(–¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º)'}`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
    const effects = await prisma.effect.findMany({
      include: {
        character: { select: { name: true } }
      }
    })
    console.log(`\nüé≠ –≠—Ñ—Ñ–µ–∫—Ç–æ–≤: ${effects.length}`)
    effects.forEach(effect => {
      console.log(`  - ${effect.icon} "${effect.name}" —É ${effect.character.name} (${effect.duration}/${effect.maxDuration} –¥–Ω–µ–π)`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    const activities = await prisma.activityLog.findMany({
      include: {
        character: { select: { name: true } }
      },
      orderBy: { createdAt: 'desc' },
      take: 5
    })
    console.log(`\nüìà –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ ${activities.length}):`)
    activities.forEach(activity => {
      const time = activity.createdAt.toLocaleString('ru-RU')
      console.log(`  - [${time}] ${activity.icon} ${activity.title} ${activity.character ? `(${activity.character.name})` : ''}`)
    })

    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkDatabase()
