import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...')

  // –ü—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –µ—Å—Ç—å
  const users = await prisma.user.findMany()
  console.log('üë• –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', users.map(u => u.name))

  if (users.length === 0) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
    return
  }

  // –ù–∞–π–¥–µ–º –≥–∏–ª–¥–º–∞—Å—Ç–µ—Ä–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º –≥–∏–ª—å–¥–∏—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let guildmaster = users.find(u => u.role === 'GUILDMASTER') || users[0]
  
  // –°–æ–∑–¥–∞–µ–º –≥–∏–ª—å–¥–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  let guild = await prisma.guild.findFirst()
  if (!guild) {
    guild = await prisma.guild.create({
      data: {
        name: '–°–µ–º—å—è –î—Ä–∞–∫–æ–Ω–æ–±–æ—Ä—Ü–µ–≤',
        description: '–í–µ—Å–µ–ª–∞—è —Å–µ–º–µ–π–Ω–∞—è –≥–∏–ª—å–¥–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!',
        code: 'DRAGON' + Math.floor(Math.random() * 100),
        memberCount: users.length,
        activeQuests: 0,
        completedToday: 0,
        ownerId: guildmaster.id,
      }
    })
    console.log('üè∞ –°–æ–∑–¥–∞–Ω–∞ –≥–∏–ª—å–¥–∏—è:', guild.name)
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –¥–æ–±–∞–≤–ª—è–µ–º –≤ –≥–∏–ª—å–¥–∏—é
  await prisma.user.updateMany({
    data: { guildId: guild.id }
  })

  // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  for (let i = 0; i < users.length; i++) {
    const user = users[i]
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–µ—Ä—Å–æ–Ω–∞–∂
    const existingChar = await prisma.character.findFirst({
      where: { userId: user.id }
    })

    if (!existingChar) {
      const characterNames = ['–ê–ª–∏—Å–∞ –•—Ä–∞–±—Ä–∞—è', '–ú–∞–∫—Å –ú—É–¥—Ä–µ—Ü', '–ê–Ω–Ω–∞ –ò—Å–∫–∞—Ç–µ–ª—å']
      const characterClasses = ['üõ°Ô∏è –ü–∞–ª–∞–¥–∏–Ω', 'üßô‚Äç‚ôÇÔ∏è –í–æ–ª—à–µ–±–Ω–∏–∫', 'üèπ –°–ª–µ–¥–æ–ø—ã—Ç']
      const avatars = ['üë∏', 'üßô‚Äç‚ôÇÔ∏è', 'üèπ']

      await prisma.character.create({
        data: {
          userId: user.id,
          guildId: guild.id,
          name: characterNames[i] || `–ì–µ—Ä–æ–π ${i + 1}`,
          class: characterClasses[i] || '‚öîÔ∏è –í–æ–∏–Ω',
          avatar: avatars[i] || '‚öîÔ∏è',
          level: Math.floor(Math.random() * 5) + 1,
          experience: Math.floor(Math.random() * 500) + 100,
          maxExperience: 1000,
          bronzeCoins: Math.floor(Math.random() * 20) + 5,
          silverCoins: Math.floor(Math.random() * 10) + 2,
          goldCoins: Math.floor(Math.random() * 5) + 1,
          streak: Math.floor(Math.random() * 10),
          completedQuests: Math.floor(Math.random() * 30) + 10,
          totalGoldEarned: Math.floor(Math.random() * 100) + 20,
          activeTitle: ['–ù–æ–≤–∏—á–æ–∫', '–°—Ç–∞—Ä–∞—Ç–µ–ª—å', '–ú–∞—Å—Ç–µ—Ä'][Math.floor(Math.random() * 3)],
        }
      })
      console.log(`üèÉ‚Äç‚ôÄÔ∏è –°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–ª—è ${user.name}`)
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
  const characters = await prisma.character.findMany()

  // –°–æ–∑–¥–∞–µ–º –∫–≤–µ—Å—Ç—ã
  const questTemplates = [
    {
      title: '–í—ã—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 7',
      description: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∏ –≤—ã—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 7 –±–µ–∑ –æ—à–∏–±–æ–∫',
      type: 'DAILY',
      difficulty: 3,
      expReward: 50,
      bronzeReward: 5,
      silverReward: 2,
      goldReward: 0,
      status: 'ACTIVE',
    },
    {
      title: '–ü–æ–º—ã—Ç—å –ø–æ—Å—É–¥—É –ø–æ—Å–ª–µ –æ–±–µ–¥–∞',
      description: '–¢—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º—ã—Ç—å –≤—Å—é –ø–æ—Å—É–¥—É –∏ —É–±—Ä–∞—Ç—å –Ω–∞ –º–µ—Å—Ç–æ',
      type: 'DAILY', 
      difficulty: 2,
      expReward: 30,
      bronzeReward: 3,
      silverReward: 1,
      goldReward: 0,
      status: 'ACTIVE',
    },
    {
      title: '–°–µ–º–µ–π–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫',
      description: '–í—Å–µ–π —Å–µ–º—å–µ–π –ø–æ–π—Ç–∏ –ø–æ–≥—É–ª—è—Ç—å –≤ –ø–∞—Ä–∫ –º–∏–Ω–∏–º—É–º –Ω–∞ 1 —á–∞—Å',
      type: 'WEEKLY',
      difficulty: 2,
      expReward: 100,
      bronzeReward: 10,
      silverReward: 5,
      goldReward: 2,
      status: 'PENDING',
    },
    {
      title: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–Ω–∏–≥–∏',
      description: '–í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∫–Ω–∏–≥—É –∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å—Ç—Ä–∞–Ω–∏—Ü',
      type: 'DAILY',
      difficulty: 3,
      expReward: 40,
      bronzeReward: 4,
      silverReward: 2,
      goldReward: 0,
      status: 'ACTIVE',
    },
    {
      title: '–£–±—Ä–∞—Ç—å —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É',
      description: '–ù–∞–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫: –ø—Ä–æ–ø—ã–ª–µ—Å–æ—Å–∏—Ç—å, –ø—Ä–æ—Ç–µ—Ä–µ—Ç—å –ø—ã–ª—å, —Å–ª–æ–∂–∏—Ç—å –≤–µ—â–∏',
      type: 'WEEKLY',
      difficulty: 4,
      expReward: 80,
      bronzeReward: 8,
      silverReward: 4,
      goldReward: 1,
      status: 'ACTIVE',
    },
  ]

  // –°–æ–∑–¥–∞–µ–º –∫–≤–µ—Å—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
  for (let i = 0; i < questTemplates.length; i++) {
    const template = questTemplates[i]
    const assignedCharacter = characters[i % characters.length] // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–≤–µ—Å—Ç—ã –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏
    
    await prisma.quest.create({
      data: {
        ...template,
        assignedToId: template.status === 'PENDING' ? null : assignedCharacter.id,
        guildId: guild.id,
        createdById: guildmaster.id,
      }
    })
  }

  console.log(`üìù –°–æ–∑–¥–∞–Ω–æ ${questTemplates.length} –∫–≤–µ—Å—Ç–æ–≤`)

  // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–≥—Ä–∞–¥
  const rewards = [
    {
      name: '30 –º–∏–Ω—É—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
      description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 30 –º–∏–Ω—É—Ç —ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏',
      cost: 50,
      category: 'ENTERTAINMENT',
      isActive: true,
      guildId: guild.id,
    },
    {
      name: '–í—ã–±–æ—Ä —Ñ–∏–ª—å–º–∞ –Ω–∞ –≤–µ—á–µ—Ä',
      description: '–ü—Ä–∞–≤–æ –≤—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞',
      cost: 75,
      category: 'ENTERTAINMENT', 
      isActive: true,
      guildId: guild.id,
    },
    {
      name: '100 —Ä—É–±–ª–µ–π –Ω–∞ –∫–∞—Ä–º–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã',
      description: '–î–µ–Ω–µ–∂–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É',
      cost: 200,
      category: 'MONEY',
      isActive: true,
      guildId: guild.id,
    },
  ]

  for (const reward of rewards) {
    await prisma.reward.create({ data: reward })
  }

  console.log(`üéÅ –°–æ–∑–¥–∞–Ω–æ ${rewards.length} –Ω–∞–≥—Ä–∞–¥`)

  // –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const stats = {
    users: await prisma.user.count(),
    guilds: await prisma.guild.count(),
    characters: await prisma.character.count(),
    quests: await prisma.quest.count(),
    rewards: await prisma.reward.count(),
  }

  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!')
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats)
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ')
  })
