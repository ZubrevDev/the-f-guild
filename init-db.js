const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

try {
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  const dbPath = path.join(__dirname, 'prisma', 'dev.db');
  if (fs.existsSync(dbPath)) {
    fs.unlinkSync(dbPath);
    console.log('üóëÔ∏è –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞');
  }

  console.log('üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...');
  execSync('npx prisma migrate dev --name init', { stdio: 'inherit' });

  console.log('üå± –ó–∞–ø—É—Å–∫–∞–µ–º seeding...');
  execSync('npx tsx prisma/seed_fixed.ts', { stdio: 'inherit' });

  console.log('üîç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client...');
  execSync('npx prisma generate', { stdio: 'inherit' });

  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!');
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∫–æ–º–∞–Ω–¥–æ–π: npm run dev');

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
  process.exit(1);
}
